
@model DomainLayer.ProductModel.ProductEntity
@{
    Layout = "~/Views/Simpleview/_BasicLayout.cshtml";
    var data = ViewData["images"] as IEnumerable<DomainLayer.ProductModel.Images>;
    var data1 = ViewData["images"] as IEnumerable<DomainLayer.ProductModel.Images>;
    var returnUrl = ViewBag.ReturnUrl as string;
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.2/jquery-confirm.min.css">


<div class="row col-12">
    <div class="col-4 _78xt5Y"><div class="row col-12"><div class="col-3 ">
        @{if (Model.images == null)
                    {
                        <h1>No images</h1>
                    }
                    else
                    {
                        foreach (var item in Model.images)
                        {
                                <img src="@item.imagePath" class="card sideImage" onclick="showImage('@item.imagePath');" />
                        }
                        }}
    </div>
    @{if (Model.images != null && Model.images.Any())
                        {

                            <img class="card col-7 Image showimage" src="@Model.images.FirstOrDefault().imagePath" alt="No images available" />

                        }
                        else
                        {
                            <p>No Image</p>
                        }}
                        </div>
    <div class="row col-12"><a class="col-5 buy" asp-action="order" asp-route-id="@Model.id">Buy</a><a class="col-5 cart" asp-action="AddtoCart" asp-route-id="@Model.id">AddtoCart</a></div></div>
    <div class="col-8"><p class="heading">@Model.name @Model.productBrand                                                                                                                                                              </p>
        <span class="card price">&#8377 @Model.price</span>

        <div style="margin:2%"><span>Number of orders for this product : <span class="bold">@Model.purchasedNumber </span></span></div>
    <table class="table table-hover col-7">
  <thead>
  </thead>
  <tbody>
    <tr>
      <td>Operation System</td>
      <td>@Model.specs.os</td>
    </tr>
    <tr>
      <td>Processor</td>
      <td>@Model.specs.processor</td>
    </tr>
    <tr>
      <td>Cores</td>
      <td>@Model.specs.core</td>
    </tr>
    <tr>
      <td>Ram</td>
      <td>@foreach (var item in Model.specs.rams.ToList())
                        {<span>@item.ram </span>}</td>
    </tr>
    <tr>
      <td>Storage</td>
      <td> @foreach (var item in Model.specs.storages.ToList())
                        {<span>@item.storage </span>}</td>
    </tr>
    <tr>
      <td>Sim Type</td>
      <td>@Model.specs.simType</td>
    </tr>
    <tr>
      <td>Rear Camera</td>
      <td>@Model.specs.simType</td>
    </tr>
     <tr>
      <td>Quantity</td>
      <td>@Model.quantity</td>
    </tr>
     <tr>
      <td>Description</td>
      <td>@Model.description</td>
    </tr>
  </tbody>
</table>
</div>
</div>
<script>

    function showImage(data) {

        $(".showimage").attr('src', data);
    }
</script>
<style>
    .sideImage{
        width:54px;
        padding:1%
    }
    .Image{
        
        padding:1%;
    }
    .heading{
    font-size: 19px;
    font-family: system-ui;
    font-weight: bold;
    margin-top: 2%;
}
.price{
    padding: 1%;
    border-radius: 24px;
    min-width: 14%;
    max-width: 20%;
    font-weight: bold;
    font-size: 24px;
    color: tomato;
}
.bold
    {
    font-weight: bold;
}
.buy{
    text-align: center;
    padding: 2%;
    background-color: #ff0404;
    margin: 4%;
    border-radius: 28px;
    color: white !important;
    font-size: 20px;
}
.cart{
    text-align: center;
    padding: 2%;
    background-color: blue;
    margin: 4%;
    border-radius: 28px;
    color: white !important;
    font-size: 20px;
}
._78xt5Y {
    position: -webkit-sticky;
    position: sticky;
    top: 64px;
    bottom: 0;
    z-index: 2;
    -webkit-align-self: flex-start;
    -ms-flex-item-align: start;
    align-self: flex-start;
}
</style>